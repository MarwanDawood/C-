function ThingSpeakWriteCallback(action,blk)
%ThingSpeakWriteCallback Mask Helper Function for ThingSpeak Write block.
%

% Copyright 2016 The MathWorks, Inc.

% Check on input "action"
switch action
    case 'CoordinatesEnabled'
        mv = get_param(blk,'MaskVisibilities');
        CoordinatesEnabled = get_param(blk,'CoordinatesEnabled');
        CoordinatesSource = get_param(blk,'CoordinatesSource');
        if strcmp(CoordinatesEnabled,'on')
            mv{7} = 'on';
            if isequal(CoordinatesSource,'Block dialog')
                mv{8} = 'on';
            else
                mv{8} = 'off';
            end
        else
            mv{7} = 'off';
            mv{8} = 'off';
        end
        set_param(blk,'MaskVisibilities',mv);
        
    case 'CoordinatesSource'
        src = get_param(blk,'CoordSrc'); 
        set_param(blk, 'CoordinatesSource', src)
        mv = get_param(blk,'MaskVisibilities');
        CoordinatesEnabled = get_param(blk,'CoordinatesEnabled');
        CoordinatesSource = get_param(blk,'CoordinatesSource');
        if strcmp(CoordinatesEnabled,'on') && ...
                strcmp(CoordinatesSource,'Block dialog')
            mv{8} = 'on';
        else
            mv{8} = 'off';
        end
        set_param(blk,'MaskVisibilities',mv);
        
    case 'MaskInitialization'
        updatePortLabels(blk);
        updateParams(blk);
        
    otherwise
        error('linux:blocks:UnknownCallback',...
            'Unknown callback action "%s"',action)
end
end

%--------------------------------------------------------------------------
function updatePortLabels(blk)

eol = char(10);
platform = realtime.internal.getBlockDisplayText(gcb);
maskDisplayStr = '';
maskDisplayStr = [maskDisplayStr, 'image(imread(''cloud.png''),[0.25 0.25 0.55 0.45]);', eol];
maskDisplayStr = [maskDisplayStr, 'color(''blue'');', eol, ...
    'text(0.35, 0.87, ''' platform ''', ''horizontalAlignment'', ''left'');', eol ...
    'color(''black'');', eol, ...
    'CoordinatesEnabled = get_param(gcb, ''CoordinatesEnabled'');', eol ...
    'CoordinatesSource = get_param(gcb, ''CoordinatesSource'');', eol ...
    'NumberOfFields_ = str2double(get_param(gcb,''NumberOfFields''));', eol ...
    'if NumberOfFields_ >= 2', eol ...
    'port_label(''input'', 1, ''var1'');', eol ...
    'port_label(''input'', 2, ''var2'');', eol ...
    'end', eol ...
    'if NumberOfFields_ >= 3', eol ...
    'port_label(''input'', 3, ''var3'');', eol ...
    'end', eol ...
    'if NumberOfFields_ >= 4', eol ...
    'port_label(''input'', 4, ''var4'');', eol ...
    'end', eol ...
    'if NumberOfFields_ >= 5', eol ...
    'port_label(''input'', 5, ''var5'');', eol ...
    'end', eol ...
    'if NumberOfFields_ >= 6', eol ...
    'port_label(''input'', 6, ''var6'');', eol ...
    'end', eol ...
    'if NumberOfFields_ >= 7', eol ...
    'port_label(''input'', 7, ''var7'');', eol ...
    'end', eol ...
    'if NumberOfFields_ >= 8', eol ...
    'port_label(''input'', 8, ''var8'');', eol ...
    'end', eol ...
    'if strcmp(CoordinatesEnabled, ''on'') && strcmp(CoordinatesSource, ''Input port'')', eol ...
    'port_label(''input'', NumberOfFields_+1, ''location'');', eol ...
    'end', eol ...
    ];
set_param(blk, 'MaskDisplay', maskDisplayStr);
end

function updateParams(blk)
p = get_param(blk,'NumberOfFields');
set_param(blk,'NumberOfVariables',p);
end
%[EOF]
